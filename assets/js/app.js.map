{
  "version": 3,
  "sources": ["../../src/app.ts"],
  "sourcesContent": ["const text = document.getElementById('search') as HTMLInputElement;\nconst search = document.getElementById('search-btn') as HTMLButtonElement;\n\n\ninterface ResultWrapper extends HTMLDivElement {\n  timeout: NodeJS.Timeout;\n  tags: string[];\n}\n// fetch from storage - User Tags, Id => tags map\nlet userTags: { [key: string]: string[] }, tagsFromId: { [key: string]: string[] }, folders: Set<string>\n\nfetchData()\n\n\nif (!text || !search) {\n  console.error(\"Error loading page elements\")\n}\n\ntext.addEventListener('keypress', (e) => {\n  if (e.key === 'Enter') {\n    chrome.bookmarks.search(text.value, (results) => {\n      addResults(results)\n    })\n  }\n})\n\n\nsearch.addEventListener('click', () => {\n  chrome.bookmarks.search(text.value, (results) => {\n    addResults(results)\n  })\n});\n\n//chrome.runtime.sendMessage(\"Test Meaasge\")\n\n\nasync function fetchData() {\n  const data = await Promise.all([\n    chrome.storage.sync.get('userTags'),\n    chrome.storage.sync.get('folders'),\n    chrome.storage.sync.get('tagsMap')\n  ])\n  userTags = data[0].userTags || {}\n  folders = data[1].folders\n  tagsFromId = data[2].tagsMap || {}\n\n  console.log(userTags)\n  console.log(tagsFromId)\n  console.log(folders)\n\n  // create folders array if not found\n  if (!folders || !tagsFromId) {\n    const tree = await chrome.bookmarks.getTree()\n    const bookmarks = tree[0]?.children?.[0]?.children\n    if (!bookmarks) {\n      return\n    }\n    folders = new Set()\n    for (const node of bookmarks) {\n      inspectNode(node)\n    }\n    chrome.storage.sync.set({ userTags })\n    chrome.storage.sync.set({ folders: Array.from(folders) })\n    chrome.storage.sync.set({ tagsMap: tagsFromId })\n  }\n}\n\nfunction inspectNode(node: chrome.bookmarks.BookmarkTreeNode) {\n  if (node.children && node.children?.length > 0) {\n    folders.add(node.title)\n    for (const child of node.children) {\n      inspectNode(child)\n    }\n  } else {\n    tagsFromId[node.id] = []\n    //const { title, id } = node\n    //if (title.includes('React')) {\n    //  userTags['React'] ? userTags['React'].push(id) : userTags['React'] = [id]\n    //  tagsFromId[id] ? tagsFromId[id].push('React') : tagsFromId[id] = ['React']\n    //}\n  }\n}\n\n\nfunction addResults(results: chrome.bookmarks.BookmarkTreeNode[]): void {\n\n  for (const result of results) {\n    const { id, title, url } = result\n\n    if (title && url) {\n      const wrapper = document.createElement('div') as ResultWrapper\n      const topRow = document.createElement('div')\n      const titleEl = document.createElement('p')\n      const btns = document.createElement('div')\n      const editBtn = document.createElement('button')\n      const deleteBtn = document.createElement('button')\n      wrapper.dataset.tooltip = url\n      wrapper.tags = getTagsById(id)\n      wrapper.classList.add('result-div')\n      topRow.classList.add('top-row')\n      btns.classList.add('btns')\n      topRow.appendChild(titleEl)\n      topRow.appendChild(btns)\n      titleEl.classList.add('result-title')\n      titleEl.innerText = title\n      editBtn.classList.add('button', 'primary', 'edit')\n      editBtn.innerText = 'Edit'\n      deleteBtn.classList.add('button', 'delete')\n      deleteBtn.innerText = 'Delete'\n      btns.appendChild(editBtn)\n      btns.appendChild(deleteBtn)\n      wrapper.appendChild(topRow)\n\n\n      if (wrapper.tags.length > 0) {\n        console.log(wrapper.tags)\n        const tagsRow = document.createElement('div')\n        tagsRow.classList.add('tags-row')\n        for (const tag of wrapper.tags) {\n          const tagEl = document.createElement('span')\n          tagEl.innerText = tag\n          tagsRow.appendChild(tagEl)\n        }\n        wrapper.appendChild(tagsRow)\n      }\n\n      wrapper.addEventListener('click', () => {\n        chrome.tabs.create({ url })\n      })\n      wrapper.addEventListener(\"mouseenter\", () => {\n        // Delay showing the tooltip (500ms)\n        wrapper.timeout = setTimeout(() => {\n          wrapper.style.setProperty(\"--tooltip-content\", `'${wrapper.dataset.tooltip}'`);\n          wrapper.classList.add(\"show\");\n        }, 500);\n      });\n\n      // On mouseleave, clear timeout and remove the 'hover' class\n      wrapper.addEventListener(\"mouseleave\", () => {\n        clearTimeout(wrapper.timeout);\n        wrapper.classList.remove(\"show\");\n      });\n      document.getElementById('results')?.appendChild(wrapper)\n    }\n  }\n}\n\n\nfunction getTagsById(id: string): string[] {\n  return tagsFromId[id] || []\n}\n"],
  "mappings": "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",
  "names": []
}
